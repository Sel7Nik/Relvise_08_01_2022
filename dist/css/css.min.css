html {
  box-sizing: border-box;
  scroll-behavior: smooth;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html,
body,
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
abbr,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
samp,
small,
strong,
sub,
sup,
var,
b,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

body {
  line-height: 1;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

ul,
nav ul,
ol,
li {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
  text-decoration: none;
  color: inherit;
}

/* change colours to suit your needs */
ins {
  background-color: #ff9;
  color: #000;
  text-decoration: none;
}

/* change colours to suit your needs */
mark {
  background-color: #ff9;
  color: #000;
  font-style: italic;
  font-weight: bold;
}

del {
  text-decoration: line-through;
}

abbr[title],
dfn[title] {
  border-bottom: 1px dotted;
  cursor: help;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* change border colour to suit your needs */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #cccccc;
  margin: 1em 0;
  padding: 0;
}

input,
select {
  vertical-align: middle;
  border: none;
  padding: 0;
  margin: 0;
}

button {
  border: none;
  padding: 0;
  margin: 0;
}

@font-face {
  font-family: icons;
  font-display: swap;
  src: url("../fonts/icons.woff2") format("woff2"), url("../fonts/icons.woff") format("woff");
  font-weight: 400;
  font-style: Regular;
}
@font-face {
  font-family: icons;
  font-display: swap;
  src: url("../fonts/icons.woff2") format("woff2"), url("../fonts/icons.woff") format("woff");
  font-weight: 400;
  font-style: Regular;
}
@font-face {
  font-family: icons;
  font-display: swap;
  src: url("../fonts/icons.woff2") format("woff2"), url("../fonts/icons.woff") format("woff");
  font-weight: 400;
  font-style: Regular;
}
.menu-header__text, .header__logo-link span, body {
  font-family: "Montserrat", sans-serif;
  font-weight: 500;
}

.menu-header__list {
  font-family: "Montserrat", sans-serif;
  font-weight: 600;
}

.menu-header__link-learn, .menu-header__link-try, .header__logo-link {
  font-family: "Montserrat", sans-serif;
  font-weight: 700;
}

.menu-header__title {
  font-family: "Montserrat", sans-serif;
  font-weight: 800;
}

body {
  color: #737373;
}

[class*=__container] {
  max-width: 66.875rem;
  margin: 0 auto;
  padding: 0 0.9375rem;
}

body {
  font-size: 0.875rem;
}

.header {
  background: url(../img/header-bg.jpg) no-repeat top center;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: top center;
  height: 100vh;
}
.header__navbar {
  display: flex;
  padding-top: 36px;
  margin-bottom: 116px;
  gap: 132px;
  align-items: center;
}
@media (max-width: 1070px) {
  .header__navbar {
    margin-bottom: calc(
      116px - ((116 - 10) *
            ((1070px - 100vw) / (1070-320)))
    );
  }
}
@media (max-width: 1070px) {
  .header__navbar {
    gap: calc(
      132px - ((132 - 10) *
            ((1070px - 100vw) / (1070-320)))
    );
  }
}
@media (max-width: 600px) {
  .header__navbar {
    flex-direction: column;
    margin-bottom: 45px;
    gap: 25px;
  }
}
@media (max-width: 600px) and (max-width: 1070px) {
  .header__navbar {
    margin-bottom: calc(
      45px - ((45 - 10) *
            ((1070px - 100vw) / (1070-320)))
    );
  }
}
.header__logo-link {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 1.5rem;
  line-height: 2rem;
  color: #252b42;
  cursor: pointer;
}
.header__logo-link span {
  font-size: 1rem;
  line-height: 1.5rem;
}

.menu-header__list {
  display: flex;
  gap: 1.3125rem;
  font-size: 0.875rem;
  line-height: 1.5rem;
  color: #252b42;
}
@media (max-width: 375px) {
  .menu-header__list {
    flex-wrap: wrap;
    justify-content: space-evenly;
  }
}
.menu-header__title {
  color: #252b42;
  font-size: 58px;
  line-height: 80px;
  width: 650px;
  max-width: 650px;
  min-width: 100px;
  width: calc(
    650px - ((650 - 100) *
          ((1070px - 100vw) / (1070-320)))
  );
  margin-bottom: 45px;
}
@media (max-width: 1070px) {
  .menu-header__title {
    font-size: calc(
      58px - ((58 - 14) *
            ((1070px - 100vw) / (1070-320)))
    );
  }
}
@media (max-width: 1070px) {
  .menu-header__title {
    line-height: calc(
      80px - ((80 - 17) *
            ((1070px - 100vw) / (1070-320)))
    );
  }
}
.menu-header__text {
  font-size: 20px;
  line-height: 30px;
  width: 450px;
  max-width: 450px;
  min-width: 100px;
  width: calc(
    450px - ((450 - 100) *
          ((1070px - 100vw) / (1070-320)))
  );
  margin-bottom: 45px;
}
@media (max-width: 1070px) {
  .menu-header__text {
    font-size: calc(
      20px - ((20 - 14) *
            ((1070px - 100vw) / (1070-320)))
    );
  }
}
@media (max-width: 1070px) {
  .menu-header__text {
    line-height: calc(
      30px - ((30 - 17) *
            ((1070px - 100vw) / (1070-320)))
    );
  }
}
.menu-header__link-try {
  display: inline-block;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.75rem;
  padding: 10px 36px;
  background-color: #ff7b47;
  color: #ffffff;
  border-radius: 37px;
  margin-left: 0 10px;
  width: 210px;
  height: 48px;
}
@media (max-width: 600px) {
  .menu-header__link-try {
    display: block;
    margin-bottom: 15px;
  }
}
.menu-header__link-learn {
  display: inline-block;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.75rem;
  padding: 10px 36px;
  color: #0d5c63;
  border: 1px solid #0d5c63;
  border-radius: 37px;
  min-width: 210px;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */